# Azure DevOps pipeline for building two Maven projects on a self-hosted agent

trigger:
- master

pool:
  name: agent-pool   # your self-hosted agent pool name

steps:
# Step 1: Check Java 11 on the agent
- script: |
    echo "JAVA_HOME_11_X64=$JAVA_HOME_11_X64"
    java -version
  displayName: "Check Java"

# Step 2: Build mavenhelloworldmaster project
- task: Maven@4
  inputs:
    mavenPomFile: 'mavenhelloworldmaster/pom.xml'   # relative to repo root
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'Path'
    jdkUserInputPath: '/usr/lib/jvm/java-11-openjdk-amd64'
    publishJUnitResults: true
    testResultsFiles: 'mavenhelloworldmaster/**/surefire-reports/TEST-*.xml'
    goals: 'clean package'

# Step 3: Build webapp project
- task: Maven@4
  inputs:
    mavenPomFile: 'webapp/pom.xml'                   # relative to repo root
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'Path'
    jdkUserInputPath: '/usr/lib/jvm/java-11-openjdk-amd64'
    publishJUnitResults: true
    testResultsFiles: 'webapp/**/surefire-reports/TEST-*.xml'
    goals: 'clean package'

# Step 4: Publish artifacts for mavenhelloworldmaster
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/mavenhelloworldmaster/target'
    ArtifactName: 'mavenhelloworldmaster-drop'
    publishLocation: 'Container'

# Step 5: Publish artifacts for webapp
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/webapp/target'
    ArtifactName: 'webapp-drop'
    publishLocation: 'Container'




